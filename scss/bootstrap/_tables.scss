/*------------------------------------------------------------------
  [Tables]
*/
.table
{
	> thead
	{
		> tr
		{
			> th
			{
				border-bottom-width: 2px;
				font-weight: $font-weight-bold;
			}
		}

		//Color classes
		&.primary
		{
			> tr
			{
				> th
				{
					color: $primary-color;
				}
			}
		}

		&.success{

			> tr{
				> th{
					color: $success-color;
				}
			}
		}
	}

	> tbody
	{
		> tr
		{
			> td
			{
				font-weight: $font-weight-regular;
				vertical-align: middle;
			}
		}
	}
}

.be-table-responsive
{
	scroller-x: hidden;
	
	@include media_size("phone")
	{
		display: block;
		width: 100%;
		overflow-x: auto;
	}
}

.table-condensed,
.table-sm
{
	&,
	.table-responsive > &
	{
		> thead
		{
			> tr
			{
				> th
				{
					padding-top: .769rem;
					padding-bottom: .615rem;
				}
			}
		}
		
		> tbody
		{
			> tr
			{
				> td
				{
					padding: $table-cell-padding-sm;
				}
			}
		}
	}
}

.table-bordered
{
	> thead
	{
		> tr
		{
			> th
			{
				padding: 14px 10px;
			}
		}
	}

	tbody
	{
		>tr
		{
			td
			{
				&:first-child
				{
					padding-left: 10px;
				}

				&:last-child
				{
					padding-right: 10px;
				} 
			}
		}
	}
}

// Generate the contextual variants
@each $theme-colors, $theme-color in $theme-colors
{
   @include table-row-variant($theme-colors, $theme-color);
}

.table-responsive
{
	border: 0;
	margin-bottom: 0;
	
	> .table-bordered
	{
		border: $table-border-width solid $table-border-color;
	}

	tbody
	{
		> tr
		{
			> td
			{
				padding-top: .846rem;
				padding-bottom: .846rem;
				
				@include media_size("phone")
				{
					white-space: nowrap;
				}
			}
		}
	}
}

//Helpers classes
.table
{
	tr
	{
		th,
		td
		{
			.custom-control
			{
				padding: 0;
				margin: 0;
				vertical-align: middle;
				
				.custom-control-indicator
				{
					top: 0;
				}
			}

			//Actions column
			&.actions
			{
				text-align: center;

				.icon
				{
					color: darken($light-color, 37%);
					font-size: $font-size-base + .385;

					&:hover
					{
						color: darken($light-color, 50%);
					}
				}
			}
		}
	}

	tbody
	{
		tr
		{
			td
			{
				&.user-avatar
				{
					img
					{
						height: 2.308rem;
						width: 2.308rem;
						border-radius: 50%;
						margin-right: map-get($spacers, 2);

						@include media_size("phone")
						{
							display: none;
						}
					}
				}

				&.cell-detail
				{
					span
					{
						display: block;
					}

					.cell-detail-description
					{
						display: block;
						font-size: $font-size-sm;
						color: darken($light-color, 40%);
					}
				}

				&.user-info
				{
					img
					{
						float: left;
					}

					span
					{
						padding-left: map-get($spacers, 7);

						@include media_size("phone")
						{
							padding-left: 0;
						}
					}
				}

				&.milestone
				{
					min-width: 100px;
					
					span
					{
						display: block;
						font-size: $font-size-sm;
						color: darken($light-color, 40%);
						margin-bottom: .462rem;

						&.completed
						{
							float: right;
						}
					}

					.progress
					{
						height: .462rem;
						background-color: darken($light-color, 10%);
						margin-bottom: 0;

						.progress-bar
						{
							border-radius: $border-radius-base;
						}
					}
				}
			}
			
			@include table-row-state-colored(online, $success-color);
			
			@each $theme-colors, $theme-color in $theme-colors
			{
				@if $theme-colors != "success"
				{
					@include table-row-state-colored($theme-colors, $theme-color);
				}
			}
		}
	}

	.number
	{
		text-align: right;
	}

	&.table-borderless
	{
		thead
		{
			tr
			{
				th
				{
					border-bottom: 2px solid #dee2e6;
				}
			}
		}
		
		tbody
		{
			tr
			{
				td
				{
					border-top-width: 0;
				}
			}
		}
	}
}	

//Table inside full-width widget
.card-table
{
	table
	{
		margin-bottom: 0;
	}
	
	tr
	{
		th,
		td
		{
			&:first-child
			{
				padding-left: map-get($spacers, 4);
			}

			&:last-child
			{
				padding-right: map-get($spacers, 4);
			}
		}
	}

	thead
	{
		tr
		{
			th
			{
				padding-top: map-get($spacers, 3);
				padding-bottom: map-get($spacers, 2);
			}
		}
	}
}
